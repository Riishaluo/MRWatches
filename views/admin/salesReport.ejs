<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment/min/moment.min.js"></script>

    <style>
        body {
            display: flex;
            margin: 0;
            overflow-x: hidden;
        }

        .sidebar {
            width: 250px;
            background-color: #343a40;
            color: white;
            height: 100vh;
            padding: 20px;
            position: fixed;
            overflow-y: auto;
        }

        .sidebar h1 {
            font-size: 1.5rem;
            margin-bottom: 20px;
        }

        .container {
            margin-left: 250px;
            padding: 20px;
            flex-grow: 1;
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 200px;
            }

            .container {
                margin-left: 200px;
            }
        }

        @media (max-width: 576px) {
            body {
                flex-direction: column; 
            }

            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }

            .container {
                margin-left: 0;
            }
        }
    </style>
</head>


<body>

    <div class="sidebar">
        <h1>MR WATCHES</h1>
        <%- include('../partials/sidebar'); %>
    </div>

    <div class="container mt-5">
        <h1 class="text-center">Sales Report</h1>

        <div class="mt-4">
            <form id="filter-form" onsubmit="return false;">
                <div class="row">
                    <div class="col-md-3">
                        <label for="filterValue" class="form-label">Filter By:</label>
                        <select id="filterValue" class="form-select" onchange="toggleCustomDates()">
                            <option value="">-- Select Filter --</option>
                            <option value="today">Today</option>
                            <option value="this-week">This Week</option>
                            <option value="this-month">This Month</option>
                            <option value="this-year">This Year</option>
                            <option value="custom">Custom Range</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="startDate" class="form-label">Start Date:</label>
                        <input type="date" id="startDate" class="form-control" disabled>
                    </div>
                    <div class="col-md-3">
                        <label for="endDate" class="form-label">End Date:</label>
                        <input type="date" id="endDate" class="form-control" disabled>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button id="filterButton" class="btn btn-primary">Filter</button>
                    </div>
                </div>
            </form>
        </div>


        <div class="mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Total Amount</th>
                        <th>Coupon Discount</th>
                        <th>Order Date</th>
                    </tr>
                </thead>
                <tbody id="sales-report-table-body">
                    <% if (orders && orders.length> 0) { %>
                        <% orders.forEach(order=> { %>
                            <tr>
                                <td>
                                    <%= order._id %>
                                </td>
                                <td>₹<%= order.totalPrice || 0 %>
                                </td>
                                <td>₹<%= order.coupon ? order.coupon.discountValue : 0 %>
                                </td>
                                <td>
                                    <%= moment(order.orderDate).format('YYYY-MM-DD HH:mm:ss') %>
                                </td>
                            </tr>
                            <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="6" class="text-center">No data available</td>
                                    </tr>
                                    <% } %>
                </tbody>
            </table>
        </div>

        <div class="mt-4">
            <h5>Total Amount: ₹<span id="totalAmount">
                    <%= totalAmount || 0 %>
                </span></h5>
            <h5>Total Discount: ₹<span id="totalDiscount">
                    <%= totalDiscount || 0 %>
                </span></h5>
        </div>

        <div class="mt-4">
            <button class="btn btn-success" onclick="downloadReport('pdf')">Download PDF</button>
            <button class="btn btn-warning" onclick="downloadReport('excel')">Download Excel</button>
        </div>
    </div>

    <script>

        function toggleCustomDates() {
            const filterValue = document.getElementById('filterValue').value;
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');

            if (filterValue === 'custom') {
                startDateInput.disabled = false;
                endDateInput.disabled = false;
            } else {
                startDateInput.disabled = true;
                endDateInput.disabled = true;
            }
        }

        async function filterSalesReport() {
            const filterValue = document.getElementById('filterValue').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            try {
                const response = await axios.post('/admin/filter-sales-report', { filterValue, startDate, endDate });
                if (response.data.success) {
                    const tableBody = document.getElementById('sales-report-table-body');
                    const { orders, totalAmount, totalDiscount } = response.data;

                    if (orders && orders.length > 0) {

                        tableBody.innerHTML = orders.map(order => {

                            return `
                        <tr>
                            <td>${order._id}</td>
                            <td>₹${order.totalPrice || 0}</td>
                            <td>₹${order.coupon ? order.coupon.discountValue : 0}</td>
                            <td>${moment(order.orderDate).format('YYYY-MM-DD HH:mm:ss')}</td>
                        </tr>
                    `;
                        }).join('');
                    } else {
                        tableBody.innerHTML = `<tr><td colspan="4" class="text-center">No data available</td></tr>`;
                    }

                    document.getElementById('totalAmount').textContent = totalAmount || 0;
                    document.getElementById('totalDiscount').textContent = totalDiscount || 0;
                }
            } catch (error) {
                console.error('Error filtering sales report:', error);
            }
        }



        document.getElementById('filterButton').addEventListener('click', filterSalesReport);



        // Download Report
        function downloadReport(format) {
    const data = {
        orders: Array.from(document.querySelectorAll('#sales-report-table-body tr')).map(row => {
            return Array.from(row.querySelectorAll('td')).reduce((acc, td, i) => {
                // Assuming your header keys are predefined
                const headers = ['orderId', 'totalAmount', 'couponDiscount', 'orderDate'];  // Modify as needed
                acc[headers[i]] = td.innerText.trim();
                return acc;
            }, {});
        }),
        totalAmount: document.getElementById('totalAmount').textContent,
        totalDiscount: document.getElementById('totalDiscount').textContent,
    };

    // Send the data to the backend with format type (pdf or excel)
    axios.post(`/admin/download-${format}`, data, { responseType: 'blob' })
        .then(response => {
            const blob = new Blob([response.data], {
                type: format === 'pdf' ? 'application/pdf' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
            });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `sales-report.${format}`;
            link.click();
        })
        .catch(error => console.error(`Error downloading ${format}:`, error));
}

    </script>
</body>

</html>

