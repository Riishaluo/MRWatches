<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Address</title>
    <style>
        
body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f7f6;
    margin: 0;
    padding: 0;
    color: #333;
    display: flex;
    min-height: 100vh;
}

/* Main Container */
.container {
    flex: 1;
    padding: 20px;
    margin-left: 250px; /* Account for the sidebar width */
}

/* Header Styles */
header {
    text-align: center;
    margin-bottom: 40px;
}

header h1 {
    font-size: 36px;
    color: #2d3e50;
}

header p {
    font-size: 18px;
    color: #7a8b9c;
}

/* Sidebar Styles */
.sidebar {
            position: fixed;
            top: 0;
            left: 0;
            width: 250px;
            height: 100vh; /* Full height */
            background-color: #2c3e50;
            color: #ecf0f1;
            display: flex;
            flex-direction: column;
            padding: 25px 20px;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
            transition: transform 0.3s ease;
            animation: slideIn 0.5s ease-out;
            z-index: 10; /* Ensures sidebar is on top */
        }
    
        /* Sidebar Title */
        .sidebar h3 {
            font-size: 26px;
            font-weight: 600;
            margin-bottom: 30px;
            color: #fff;
            letter-spacing: 1px;
            text-transform: uppercase;
            border-bottom: 2px solid #3498db;
            padding-bottom: 10px;
        }
    
        /* Sidebar Links */
        .sidebar a {
            color: #ecf0f1;
            text-decoration: none;
            padding: 14px 20px;
            border-radius: 6px;
            margin-bottom: 15px;
            font-size: 18px;
            font-weight: 500;
            display: block;
            transition: background 0.3s, transform 0.3s ease;
            position: relative;
        }
    
        .sidebar a:hover {
            background-color: #34495e;
            transform: translateX(10px); /* Subtle hover effect */
        }
    
        .sidebar a::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background-color: #3498db;
            transform: scaleY(0);
            transition: transform 0.3s ease;
        }
    
        .sidebar a:hover::before {
            transform: scaleY(1); /* Slide indicator on hover */
        }
    
        .sidebar a.active {
            background-color: #3498db;
            color: #fff;
        }
    
        .sidebar a.active::before {
            background-color: #ecf0f1;
        }
    
        /* Sidebar Slide Animation */
        @keyframes slideIn {
            from {
                transform: translateX(-250px);
            }
            to {
                transform: translateX(0);
            }
        }

/* Address List Section */
.address-list {
    margin-bottom: 40px;
}

.address-cards {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 20px; /* Adds space between header and cards */
}

.address-card {
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column; /* Aligning elements vertically */
}

.address-card:hover {
    transform: translateY(-5px);
}

.address-card h3 {
    font-size: 22px;
    color: #2d3e50;
    margin-bottom: 10px;
}

.address-card p {
    font-size: 16px;
    margin: 5px 0;
}

.address-card button {
    margin-top: 15px;
    align-self: flex-start; /* Ensures buttons align to the left */
}

/* Add New Address Form */
.add-address h2 {
    font-size: 28px;
    color: #2d3e50;
    margin-bottom: 20px;
}

.form-group {
    margin-bottom: 20px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.form-group label {
    font-size: 16px;
    color: #2d3e50;
    margin-bottom: 8px;
}

.form-group input {
    width: 100%;
    padding: 12px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 6px;
    box-sizing: border-box;
    background-color: #fff;
    margin-top: 5px;
}

.form-group input:focus {
    border-color: #3498db;
    outline: none;
}

.error-message {
    color: #e74c3c;
    font-size: 14px;
    margin-top: 5px;
}

/* Submit Button */
.btn {
    background-color: #3498db;
    color: #fff;
    padding: 14px 24px;
    font-size: 18px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-top: 20px; /* Ensures button is not crammed at the bottom */
}

.btn:hover {
    background-color: #2980b9;
}

/* Modal Styles */
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
    padding-top: 60px;
}

.modal-content {
    background-color: #fff;
    margin: 5% auto;
    padding: 20px;
    border-radius: 8px;
    width: 50%;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

/* Footer Section */
footer {
    text-align: center;
    margin-top: 60px;
    padding: 20px;
    background-color: #2d3e50;
    color: #fff;
}

footer p {
    font-size: 14px;
}

/* Main Content */
.main-content {
    flex: 1;
    padding: 40px;
    background-color: #f4f4f4;
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-left: 250px; /* Make sure it doesn't overlap with sidebar */
}

.main-content h1 {
    color: #2c3e50;
    margin-bottom: 20px;
    font-size: 36px;
    font-weight: 700;
}

.user-details {
    background-color: #ffffff;
    padding: 25px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    position: relative;
}

.user-details h2 {
    color: #2c3e50;
    margin-bottom: 15px;
    font-size: 28px;
    font-weight: 600;
}

.user-details p {
    font-size: 18px;
    margin: 8px 0;
    line-height: 1.6;
}

.edit-button {
    display: inline-block;
    padding: 10px 20px;
    background-color: #d01313;
    color: #ffffff;
    border: none;
    border-radius: 5px;
    text-decoration: none;
    font-size: 16px;
    cursor: pointer;
    transition: background 0.3s, transform 0.3s;
    margin-top: 15px;
    font-weight: 500;
}

.edit-button:hover {
    background-color: #db3434;
    transform: translateY(-2px);
}

.message {
    color: #e74c3c;
    font-weight: bold;
    background-color: #f8d7da;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 20px;
}

/* Responsive Design */
@media (max-width: 768px) {
    .sidebar {
        position: static;
        width: 100%;
        height: auto;
    }

    .container {
        margin-left: 0;
    }

    .address-cards {
        grid-template-columns: 1fr;
    }

    header h1 {
        font-size: 28px;
    }

    .address-card h3 {
        font-size: 20px;
    }
}


        
    </style>
</head>
<body>
    <div class="sidebar">
        <h3>Account Menu</h3>
        <a href="/">Home</a>
        <a href="/my-account/details">My Details</a>
        <a href="/my-address">My Address</a>
        <a href="/my-orders">My Orders</a>
        <a href="/my-wallet">wallet</a>
    </div>


    <div class="container">
        <!-- Header Section -->
        <header>
            <h1>My Address</h1>
            <p>Manage your delivery addresses with ease</p>
        </header>
        

        <!-- Address List Section -->
        <section class="address-list">
            <% if (addresses && addresses.length > 0) { %>
                <div class="address-cards">
                    <% addresses.forEach((address) => { %>
                        <div class="address-card">
                            <h3><strong>Name:</strong> <%= address.name %></h3>
                            <p><strong>Street:</strong> <%= address.street %></p>
                            <p><strong>City:</strong> <%= address.city %></p>
                            <p><strong>State:</strong> <%= address.state %></p>
                            <p><strong>ZIP:</strong> <%= address.zip %></p>
                            <p><strong>Phone:</strong> <%= address.phone %></p>
                            <button class="btn" onclick="openEditModal('<%= address._id %>', '<%= address.name %>', '<%= address.street %>', '<%= address.city %>', '<%= address.state %>', '<%= address.zip %>', '<%= address.phone %>')">Edit</button>
                            <button class="btn" style="background-color: #e74c3c;" onclick="openDeleteModal('<%= address._id %>')">Delete</button>
                        </div>
                    <% }) %>
                </div>
            <% } else { %>
                <p class="no-addresses">No addresses found. Add a new one below.</p>
            <% } %>
        </section>

        <!-- Add New Address Form -->
        <section class="add-address">
            <h2>Add a New Address</h2>
            <form id="addressForm" action="/add-address" method="POST">
                
                <!-- Common error message -->
                <div id="common-error" class="error-message"></div>

                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" name="name" id="name" placeholder="Enter your name">
                    <div id="name-error" class="error-message"></div>
                </div>
            
                <div class="form-group">
                    <label for="street">Street:</label>
                    <input type="text" name="street" id="street" placeholder="Enter street">
                    <div id="street-error" class="error-message"></div>
                </div>
            
                <div class="form-group">
                    <label for="city">City:</label>
                    <input type="text" name="city" id="city" placeholder="Enter city">
                    <div id="city-error" class="error-message"></div>
                </div>
            
                <div class="form-group">
                    <label for="state">State:</label>
                    <input type="text" name="state" id="state" placeholder="Enter state">
                    <div id="state-error" class="error-message"></div>
                </div>
            
                <div class="form-group">
                    <label for="zip">ZIP Code:</label>
                    <input type="text" name="zip" id="zip"  placeholder="Enter ZIP code">
                    <div id="zip-error" class="error-message"></div>
                </div>
                <div class="form-group">
                    <label for="phone">Phone Number:</label>
                    <input type="text" name="phone" id="phone" placeholder="Enter phone number">
                    <div id="phone-error" class="error-message"></div>
                </div>
            
                <button type="submit" class="btn">Add Address</button>
            </form>            
        </section>
    </div>

    <!-- Modal for Editing Address -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Address</h2>
            <form id="editAddressForm" action="/edit-address" method="POST" onsubmit="return validateEditForm()">
                <input type="hidden" name="addressId" id="addressId">
                
                <div class="form-group">
                    <label for="edit-name">Name:</label>
                    <input type="text" name="name" id="edit-name" placeholder="Enter your name">
                    <div id="edit-name-error" class="error-message"></div>
                </div>
    
                <div class="form-group">
                    <label for="edit-street">Street:</label>
                    <input type="text" name="street" id="edit-street" placeholder="Enter street">
                    <div id="edit-street-error" class="error-message"></div>
                </div>
    
                <div class="form-group">
                    <label for="edit-city">City:</label>
                    <input type="text" name="city" id="edit-city" placeholder="Enter city">
                    <div id="edit-city-error" class="error-message"></div>
                </div>
    
                <div class="form-group">
                    <label for="edit-state">State:</label>
                    <input type="text" name="state" id="edit-state" placeholder="Enter state">
                    <div id="edit-state-error" class="error-message"></div>
                </div>
    
                <div class="form-group">
                    <label for="edit-zip">ZIP Code:</label>
                    <input type="text" name="zip" id="edit-zip" placeholder="Enter ZIP code">
                    <div id="edit-zip-error" class="error-message"></div>
                </div>

                <div class="form-group">
                    <label for="edit-phone">Phone Number:</label>
                    <input type="text" name="phone" id="edit-phone" placeholder="Enter phone number">
                    <div id="edit-phone-error" class="error-message"></div>
                </div>                
    
                <button type="submit" class="btn">Save Changes</button>
            </form>
        </div>
    </div>

    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeDeleteModal()">&times;</span>
            <h2>Confirm Delete</h2>
            <p>Are you sure you want to delete this address?</p>
            <form id="deleteAddressForm" action="/delete-address" method="POST">
                <input type="hidden" name="addressId" id="deleteAddressId">
                <button type="submit" class="btn" style="background-color: #e74c3c;">Delete</button>
                <button type="button" class="btn" onclick="closeDeleteModal()">Cancel</button>
            </form>
        </div>
    </div>


    <!-- <footer>
        <p>&copy; 2024 My Address</p>
    </footer> -->

</body>
</html>


<!-- edit modal validation -->
<script>
    function validateEditForm() {
        const name = document.getElementById('edit-name').value.trim();
        const street = document.getElementById('edit-street').value.trim();
        const city = document.getElementById('edit-city').value.trim();
        const state = document.getElementById('edit-state').value.trim();
        const zip = document.getElementById('edit-zip').value.trim();
        const phone = document.getElementById('edit-phone').value.trim();

        const nameError = document.getElementById('edit-name-error');
        const streetError = document.getElementById('edit-street-error');
        const cityError = document.getElementById('edit-city-error');
        const stateError = document.getElementById('edit-state-error');
        const zipError = document.getElementById('edit-zip-error');
        const phoneError = document.getElementById('edit-phone-error');

        let isValid = true;

        const alphaNumericRegex = /^[a-zA-Z0-9\s]+$/;
        const phoneRegex = /^\d{10}$/;

        
        nameError.textContent = '';
        streetError.textContent = '';
        cityError.textContent = '';
        stateError.textContent = '';
        zipError.textContent = '';
        phoneError.textContent = '';

        // Validate name
        if (name === '') {
            nameError.textContent = 'Name is required.';
            isValid = false;
        } else if (!alphaNumericRegex.test(name)) {
            nameError.textContent = 'Name must not contain special characters.';
            isValid = false;
        }

        // Validate street
        if (street === '') {
            streetError.textContent = 'Street is required.';
            isValid = false;
        } else if (!alphaNumericRegex.test(street)) {
            streetError.textContent = 'Street must not contain special characters.';
            isValid = false;
        }

        // Validate city
        if (city === '') {
            cityError.textContent = 'City is required.';
            isValid = false;
        } else if (!alphaNumericRegex.test(city)) {
            cityError.textContent = 'City must not contain special characters.';
            isValid = false;
        }

        // Validate state
        if (state === '') {
            stateError.textContent = 'State is required.';
            isValid = false;
        } else if (!alphaNumericRegex.test(state)) {
            stateError.textContent = 'State must not contain special characters.';
            isValid = false;
        }

        // Validate ZIP code
        if (zip === '') {
            zipError.textContent = 'ZIP Code is required.';
            isValid = false;
        } else if (isNaN(zip)) {
            zipError.textContent = 'ZIP Code must be a number.';
            isValid = false;
        }

        // Validate phone number
        if (phone === '') {
            phoneError.textContent = 'Phone number is required.';
            isValid = false;
        } else if (!phoneRegex.test(phone)) {
            phoneError.textContent = 'Phone number must be 10 digits and contain only numbers.';
            isValid = false;
        }

        return isValid;
    }
</script>



<script>
   
    function openEditModal(id, name, street, city, state, zip, phone) {
        document.getElementById('addressId').value = id;
        document.getElementById('edit-name').value = name;
        document.getElementById('edit-street').value = street;
        document.getElementById('edit-city').value = city;
        document.getElementById('edit-state').value = state;
        document.getElementById('edit-zip').value = zip;
        document.getElementById("edit-phone").value = phone;
        document.getElementById('editModal').style.display = "block";
    }

    
    function closeEditModal() {
        document.getElementById('editModal').style.display = "none";
    }
</script>


<!-- delete modal -->
<script>
    function openDeleteModal(addressId) {
        document.getElementById('deleteAddressId').value = addressId;
        document.getElementById('deleteModal').style.display = 'block';
    }

    function closeDeleteModal() {
        document.getElementById('deleteModal').style.display = 'none';
    }
</script>





<script>
    function validateAddressForm() {
        const name = document.getElementById('name').value.trim();
        const street = document.getElementById('street').value.trim();
        const city = document.getElementById('city').value.trim();
        const state = document.getElementById('state').value.trim();
        const zip = document.getElementById('zip').value.trim();
        const phone = document.getElementById('phone').value.trim();
        
        const nameError = document.getElementById('name-error');
        const streetError = document.getElementById('street-error');
        const cityError = document.getElementById('city-error');
        const stateError = document.getElementById('state-error');
        const zipError = document.getElementById('zip-error');
        const phoneError = document.getElementById('phone-error');
        const commonError = document.getElementById('common-error');

        let isValid = true;
        commonError.textContent = ''; 

        
        nameError.textContent = '';
        streetError.textContent = '';
        cityError.textContent = '';
        stateError.textContent = '';
        zipError.textContent = '';
        phoneError.textContent = '';

        // Regular expressions
        const alphaNumericRegex = /^[a-zA-Z0-9\s]+$/;
        const phoneRegex = /^[0-9]{10}$/;
        const noLeadingSpaces = /^\S.*$/;

       
        if (name === '') {
            nameError.textContent = 'Name is required.';
            isValid = false;
        } else if (!noLeadingSpaces.test(name)) {
            nameError.textContent = 'Name should not start with a space.';
            isValid = false;
        } else if (!alphaNumericRegex.test(name)) {
            nameError.textContent = 'Name must not contain special characters.';
            isValid = false;
        }

        
        if (street === '') {
            streetError.textContent = 'Street is required.';
            isValid = false;
        } else if (!noLeadingSpaces.test(street)) {
            streetError.textContent = 'Street should not start with a space.';
            isValid = false;
        }

        
        if (city === '') {
            cityError.textContent = 'City is required.';
            isValid = false;
        } else if (!noLeadingSpaces.test(city)) {
            cityError.textContent = 'City should not start with a space.';
            isValid = false;
        }

        
        if (state === '') {
            stateError.textContent = 'State is required.';
            isValid = false;
        } else if (!noLeadingSpaces.test(state)) {
            stateError.textContent = 'State should not start with a space.';
            isValid = false;
        }

    
        if (zip === '') {
            zipError.textContent = 'ZIP Code is required.';
            isValid = false;
        } else if (isNaN(zip)) {
            zipError.textContent = 'ZIP Code must be a number.';
            isValid = false;
        }

       
        if (phone === '') {
            phoneError.textContent = 'Phone number is required.';
            isValid = false;
        } else if (!phoneRegex.test(phone)) {
            phoneError.textContent = 'Phone number must be 10 digits and contain no special characters.';
            isValid = false;
        }

       
        if (!isValid) {
            commonError.textContent = 'All feilds are required.';
        }

        return isValid;
    }

    // Attach validateAddressForm to the form submission event
    document.getElementById('addressForm').onsubmit = function() {
        return validateAddressForm();
    };
</script>
